<h2 style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">Error Handling In Asp.Net Core :-</h2><div style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">Error Handling in Asp.Net Core has changed a bit from what we used to use in Asp.Net Mvc. Before .Net Core We used to use OnException Methods to handle Exceptions while executing actions But it doesn't see working in .Net Core as many features are changed.So In this Article we will see how to make exception handling work&nbsp; in Asp.Net Core.</div><div style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><br></div><h3 style="color: rgb(117, 117, 117); font-size: 16px; font-family: Roboto, sans-serif;">Setting Up Error Logs:-&nbsp;&nbsp;</h3><div style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">Unlike Asp.Net Mvc in Asp.Net Core we have to do most of the work with our startup.cs file.Here in Configure Method We can use Exception Handler like we have showed in code snippet.This will write exception in a separated Log File.</div><p><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">Open your startup.cs and use exception handling code block like this.</span></p><p><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;public void Configure(IApplicationBuilder app, IHostingEnvironment env)</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (env.IsDevelopment())</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.UseExceptionHandler(a =&gt; a.Run(async context =&gt;</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var exceptionHandlerPathFeature = context.Features.Get&lt;IExceptionHandlerPathFeature&gt;();</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var exception = exceptionHandlerPathFeature.Error;</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!Directory.Exists(env.ContentRootPath + "\\App_Data\\log\\"))</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Directory.CreateDirectory(env.ContentRootPath + "\\App_Data\\log\\");</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var filename = env.ContentRootPath + "\\App_Data\\" + "log\\" + "Logerror.txt";</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var sw = new System.IO.StreamWriter(filename, true);</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sw.WriteLine(DateTime.Now.ToString() + " " + exception.Message + " " + exception.InnerException + " " + exception.StackTrace);</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sw.Close();</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var result = JsonConvert.SerializeObject(new { error = exception.Message });</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; context.Response.ContentType = "application/json";</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; await context.Response.WriteAsync(result);</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }));</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.UseExceptionHandler("/Home/Error");</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.UseHsts();</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.UseHttpsRedirection();</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.UseStaticFiles();</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.UseCookiePolicy();</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; app.UseMvc(routes =&gt;</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; routes.MapRoute(</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: "default",</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; template: "{controller=Home}/{action=Index}/{id?}");</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });</span><br style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;"><span style="color: rgb(117, 117, 117); font-family: Roboto, sans-serif;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br></p>

