@model Code2Night.Models.AritclesModel
@{
    ViewData["Title"] = "Article";

}
<link href="https://myCDN.com/prism@v1.x/themes/prism.css" rel="stylesheet" />
<script src="https://prismjs.com/prism.js"></script>
<script src="https://myCDN.com/prism@v1.x/plugins/autoloader/prism-autoloader.min.js"></script>

<style>
    .articleactive {
        background-color: #efefef !important;
    }

    /*  pre {
        padding: 10px 16px;
        border-radius: 2px;
    }

        pre p {
            display: block;
            line-height: 1.5rem;
            counter-increment: line;
        }

            pre p:before {
                content: counter(line);
                display: inline-block;
                border-right: 1px solid #ddd;
                padding: 0 .5em;
                margin-right: .5em;
                color: #888
            }*/
</style>
<div class="page-intro">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <ol class="breadcrumb">
                    <li><i class="fa fa-home pr-10"></i><a href="@Url.Action("index","User")">Home</a></li>
                    <li><a href="@Url.Action("index","Tutorials")">Tutorials</a></li>
                    <li class="active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<section class="main-container" style="margin-top: 0px;">

    <div class="container">
        <div class="row">

            <!-- sidebar start -->
            @if (Model.GetArticles.Count() > 0)
            {
                <aside class="col-md-3">
                    <div class="sidebar">
                        <div class="block clearfix">

                            <h3 class="title">@Model.GetArticles.FirstOrDefault()?.Topictitle</h3>
                            <div class="separator"></div>
                            <nav>
                                <ul class="nav nav-pills nav-stacked">
                                    @foreach (var item in Model.GetArticles)
                                    {
                                        <li><a class='article @(Model.ArticleDetails?.articleurl==item.articleurl?"articleactive":"")' onclick="fetchArticle(@item.articleid,this)">@item.articletitle</a></li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    </div>
                </aside>
            }
            else
            {
                <h1 style="text-align:center">Sorry ! No Articles Found</h1>
            }
            <!-- sidebar end -->
            <!-- main start -->
            <!-- ================ -->
            <div class="main col-md-8 col-md-offset-1" id="Articlespartialid">
                @if (Model.ArticleDetails.articleid != 0)
                {
                    Html.RenderPartial("_Article", Model.ArticleDetails);
                }
            </div>
            <!-- main end -->

        </div>
    </div>
</section>
<script>
    $(document).ready(function () {
          @if (Model.ArticleDetails.articleid == 0)
              {
        @: $('.article').first().click();
        @: $('.article:first').addClass('articleactive');
              }
    })
    function LoadPartialViewPromise(url, elem, postData) {
        ShowLoader();
        var promise = $.post(url, postData, function (result, status) {

            $("#" + elem).html('');
            $("#" + elem).html(result);
            HideLoader();

        });
        return promise;
    }
    var fetchArticle = function (id, elem) {
        $('.articleactive').removeClass('articleactive');
        $(elem).addClass('articleactive');
        var promise = LoadPartialViewPromise('@Url.Action("ArticleDetail", "Tutorials")', "Articlespartialid", { id: id });
        promise.done(function (data) {
            $('#Articlespartialid').html(data);
        //$('pre').each(function (index, elem) {
        //   var d = $(this)[0];
        //    for (var i = 0; i < d.childNodes.length; i++) {
        //        if (d.childNodes[i].nodeType === 3 &&
        //            d.childNodes[i].textContent.replace(/^\s+|\s+$/g, "")) {
        //            if (d.childNodes[i].textContent.replace(/^\s+|\s+$/g, "")!="")
        //            wrapNode(d.childNodes[i]);
        //        }
        //    }

        //    var lines = $(this).text().split('\n');
        //    var paras = '';
        //    $.each(lines, function (i, line) {
        //        // $(line).wrap('<p></p>');
        //        if (line != "") {
        //            if (line && line.indexOf('<input') == -1) {
        //                paras += '<p>' + line + '</p>';
        //            }
        //        }
        //    });
        //    paras.replace(/[\r\n]+/g, '\n');
        //    // $(this).html('');
        //    // $(this).append(paras);
        //    $(this).html(paras);
        //});
        })
    }
    function wrapNode(node) {
        $(node).replaceWith("<p>" + node.textContent + "</p>");
    }


</script>
